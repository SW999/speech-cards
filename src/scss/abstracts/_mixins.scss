@mixin pseudo($display: block, $pos: absolute, $content: '') {
  content: $content;
  display: $display;
  position: $pos;
}

@mixin size($width, $height: $width) {
  width: $width;
  height: $height;
}

@mixin draw-progress($progress) {
  .left-side {
    transform: rotate($progress * 3.6deg);
  }

  @if $progress <= 50 {
    .right-side {
      display: none;
    }
  } @else {
    .radial-progress-bar__pie {
      clip: rect(auto, auto, auto, auto);
    }

    .right-side {
      transform: rotate(180deg);
    }
  }
}

@mixin progress() {
  @for $i from 1 through 100 {
    &.progress-#{$i} {
      @include draw-progress($i)
    }
  }
}

@mixin center($position) {
  position: absolute;

  @if $position == 'vertical' {
    top: 50%;
    -webkit-transform: translateY(-50%);
    -ms-transform: translateY(-50%);
    transform: translateY(-50%);
  }
  @else if $position == 'horizontal' {
    left: 50%;
    -webkit-transform: translateX(-50%);
    -ms-transform: translateX(-50%);
    transform: translate(-50%);
  }
  @else if $position == 'both' {
    top: 50%;
    left: 50%;
    -webkit-transform: translate(-50%, -50%);
    -ms-transform: translate(-50%, -50%);
    transform: translate(-50%, -50%);
  }
}

// @include mq('tablet-wide')
@mixin mq($width, $type: min) {
  @if map_has_key($breakpoints, $width) {
    $width: map_get($breakpoints, $width);
    @if $type == max {
      $width: $width - 1px;
    }
    @media only screen and (#{$type}-width: $width) {
      @content;
    }
  }
}

@mixin truncate($truncation-boundary) {
  max-width: $truncation-boundary;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

@mixin truncateMultiLine($max-lines: 2) {
  display: -webkit-box;
  -webkit-line-clamp: $max-lines;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

@mixin button($padding:1rem 2rem, $font-size:1.6rem, $border-radius:.2rem, $bg-color:#151515, $font-color:#fff) {
  display: block;
  margin: 1.7rem auto;
  padding:$padding;
  border: none;
  border-radius:$border-radius;
  color:$font-color;
  font-size:$font-size;
  font-family: inherit;
  cursor: pointer;
  box-shadow: 0 0 2px rgba(0,0,0,.12), 0 2px 2px rgba(0,0,0,.2);
  transition: all .2s ease-in-out;
  background:$bg-color;
}

@mixin button-bg($bg) {
  background: $bg;

  &:hover {
    box-shadow: 0 0 3px rgba(0,0,0,.12), 0 3px 4px rgba(0,0,0,.25);
  }

  &:active {
    background: darken($bg, 5%);
  }
}
