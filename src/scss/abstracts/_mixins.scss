$shadow: 0 0 .3rem rgba($dark-gray, .12), 0 .3rem .4rem rgba($dark-gray, .25);

@mixin pseudo($display: block, $pos: absolute, $content: '') {
  content: $content;
  display: $display;
  position: $pos;
}

@mixin size($width, $height: $width) {
  width: $width;
  height: $height;
}

@mixin draw-progress($progress, $size) {
  .progress__curve-first-half {
    transform: rotate($progress * 3.6deg);
  }

  @if $progress < 50 {
    .progress__curve {
      clip: rect(0, $size, $size, #{$size/2});
    }

    .progress__curve-second-half {
      transform: rotate(0deg);
    }
  } @else {
    .progress__curve {
      clip: rect(auto, auto, auto, auto);
    }

    .progress__curve-second-half {
      transform: rotate(180deg);
    }
  }

  @if $progress == 100 {
    .progress__curve-first-half,
    .progress__curve-second-half {
      border-color: $orange;
    }
  }
}

@mixin progress($size) {
  @for $i from 1 through 100 {
    &.progress-#{$i} {
      @include draw-progress($i, $size)
    }
  }
}

@mixin center-flex() {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin center($position: 'both') {
  position: absolute;

  @if $position == 'vertical' {
    top: 50%;
    -webkit-transform: translateY(-50%);
    -ms-transform: translateY(-50%);
    transform: translateY(-50%);
  } @else if $position == 'horizontal' {
    left: 50%;
    -webkit-transform: translateX(-50%);
    -ms-transform: translateX(-50%);
    transform: translate(-50%);
  } @else if $position == 'both' {
    top: 50%;
    left: 50%;
    -webkit-transform: translate(-50%, -50%);
    -ms-transform: translate(-50%, -50%);
    transform: translate(-50%, -50%);
  }
}

@mixin mq($width, $type: min) {
  @if map_has_key($breakpoints, $width) {
    $width: map_get($breakpoints, $width);
    @if $type == max {
      $width: $width - 1px;
    }
    @media only screen and (#{$type}-width: $width) {
      @content;
    }
  }
}

@mixin truncate($truncation-boundary) {
  max-width: $truncation-boundary;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

@mixin truncateMultiLine($max-lines: 2) {
  display: -webkit-box;
  -webkit-line-clamp: $max-lines;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

@mixin button($padding:1rem 2rem, $font-size:1.6rem, $border-radius:.4rem, $font-color:$dark-gray) {
  margin-top: 1.7rem;
  margin-bottom: 1.7rem;
  padding: $padding;
  border: none;
  border-radius: $border-radius;
  outline: .2rem solid transparent;
  color: $font-color;
  font-size: $font-size;
  font-weight: bolder;
  letter-spacing: .1rem;
  font-family: inherit;
  cursor: pointer;
  box-shadow: 0 0 .2rem rgba($dark-gray, .12), 0 .2rem .2rem rgba($dark-gray, .2);
  transition: all .2s $easing-function;

  @media(hover: hover) and (pointer: fine) {
    &:not(:disabled):hover {
      box-shadow: $shadow;
    }
  }
}

@mixin button-bg($bg) {
  @include text-shadow;
  border: .2rem solid $bg;
  color: $white !important;
  background: $bg;

  &:active, &:focus {
    border-color: darken($bg, 5%);
    box-shadow: $shadow;
    background: darken($bg, 5%);
  }

  &:active {
    border-radius: 0;
  }
}

@mixin button-outlined($color) {
  border: .2rem solid $color;
  color: $color;
  background-color: transparent;

  &:active, &:focus {
    border-color: darken($color, 10%);
    box-shadow: $shadow;
    color: darken($color, 10%);
  }

  &:active {
    border-radius: 0;
  }
}

@mixin button-colored-link($color) {
  border: .2rem solid transparent;
  color: $color;
  background-color: transparent;

  &:active, &:focus {
    border-color: $color;
    box-shadow: $shadow;
  }

  &:active {
    border-radius: 0;
  }
}

@mixin ripple {
  position: relative;
  overflow: hidden;
  transform: translate3d(0, 0, 0);

  &:after {
    @include pseudo;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    opacity: 0;
    transform: scale(10, 10);
    transition: transform .5s, opacity 1s;
    background-image: radial-gradient(circle, $dark-gray 10%, transparent 10.01%);
    background-repeat: no-repeat;
    background-position: 50%;
  }

  &:active:after {
    opacity: .2;
    transform: scale(0, 0);
    transition: 0s;
  }
}

@mixin text-shadow {
  text-shadow: .1rem .2rem rgba($dark-gray, .5);
}
